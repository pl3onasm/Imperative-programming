
Answers

1. c  O(N)
2. d  O(N log N)
3. b  O(√N)
4. a  O(log N)
5. e  O(N²)
6. c  O(N)


Reasoning

1.  The for loop runs N times, since the loop condition
    can just be rewritten as i > 0. Thus, the time 
    complexity is in O(N).

2.  The outer loop will run log(N) times, whereas the 
    inner loop will run at most N/2 times, which is in 
    linear time. As the two loops are nested, the time
    complexity is in O(N log N).

3.  At termination, s will be the sum of the first i 
    integers, so s = i(i+1)/2 ⪆ N, where i stands for
    the number of iterations. Thus, the overall time 
    complexity is in O(√N).

4.  In each iteration, i is divided by two, and the if 
    statement is there to ensure i is even before 
    division takes place. All operations within the loop 
    are in O(1), so the overall complexity is in O(log N).

5.  At termination, the loop has run N²/2 + 1 times. The 
    variable s doesn't affect the overall running time. 
    Thus, the time complexity is in O(N²).

6.  When the loop terminates, s will be the sum of the 
    first i integers. In contrast to question 3, the 
    termination condition here is s ≤ N² and not s < N, 
    so the loop runs N times. Thus, the time complexity 
    is in O(N).


