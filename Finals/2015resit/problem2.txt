
Answers

1. c  O(N)
2. d  O(N log N)
3. b  O(√N)
4. a  O(log N)
5. e  O(N²)
6. c  O(N)


Reasoning

1.  The for loop will run N times, since it will terminate when i = 0. 
    Thus, the time complexity is in O(N).

2.  The outer for loop will run log N times, whereas the inner for
    loop will run at most N/2 times, which is in linear time. As the 
    two loops are nested, the time complexity is in O(N log N).

3.  At termination, s will be the sum of the first i integers, which is 
    i(i+1)/2, a value that is dominated by the square term. Thus, the 
    overall time complexity is in O(√N).

4.  In each iteration, i is divided by two, and the if statement ensures
    i is an even number before the division takes place. 
    All operations within the loop are in O(1) time, so the time 
    complexity of the fragment is in O(log N).

5.  At termination, i will have become N²/2 + 1. The variable s doesn't 
    affect the overall running time. Thus, the time complexity is in O(N²).

6.  When the loop terminates, s will be the sum of the first i integers,
    where i itself will have been incremented to N. Other than in question
    3, the termination condition is s < N² and not s < N, so the loop will
    run N times. Thus, the time complexity is in O(N).


