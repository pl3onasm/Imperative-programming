
Answers

1. d  O(N log N)
2. d  O(N log N)
3. e  O(N²)
4. b  O(√N)
5. a  O(log N)
6. a  O(N log N)


Reasoning

1.  After each iteration of the outer for loop, i is halved, 
    so the number of iterations equals log(N). The inner loop 
    runs i times, so it runs at most N times. Since the loops 
    are nested, the overall time complexity is in O(N log N).

2.  This is similar to the previous problem, except that now 
    the outer loop runs N times, whereas the inner loop runs
    at most log(N) times. Since the loops are nested, the 
    overall time complexity is again in O(N log N).

3.  The outer loop runs N times. The inner loop runs at 
    most N/2 times for each iteration of the outer loop. 
    Since the loops are nested, the overall time 
    complexity is in O(N²).

4.  The loop will terminate when i ⩰ N/i, i.e. i² ⩰ N. 
    Since i is incremented by 1 after each iteration, 
    and s doesn't affect the running time, the loop will 
    run at most √N times. Therefore, the time complexity 
    is in O(√N).
    To be fair, the program fragment will actually result 
    in undefined behavior as the initial value of the loop
    condition is undefined, since i is initialized to zero.

5.  The variable i is initialized to N and is either 
    decremented by 1 or divided by d in each iteration. 
    The value for d lies in [1,5]. Only in the case where 
    i is evenly divisible by d, will it be decremented by 1, 
    otherwise i will be integer divised by d. As the division
    clearly dominates the running time, the time complexity 
    is in O(log N)

6.  The outer for loop runs log(N) times. For each iteration 
    of the outer loop, the inner loop makes j catch up
    with the current value of i: the value of j just picks 
    up where it left off in the previous iteration. The 
    highest value j will reach is j ≥ N/2, after which i 
    will be doubled for a last time and the outer loop 
    terminates. Thus, the inner loop will run at most N/4
    times and is in O(n), and the overall time complexity 
    is in O(N log N).


