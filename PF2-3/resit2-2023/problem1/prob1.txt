For each of the following annotations determine which choice fits on the empty line (.....). The
variables x, y, and z are of type int. Note that A and B (capital letters!) are specification
constants (so not program variables).


1.1
// x == 11 
.....
// x == y + 7 

 (a) y := 4;
 (b) x := x - y + 4;
 (c) x := 11 - (x + y + 7);


1.2
// x == B - A && y == A + B 
.....
// (x + y)/2 == A + B 

 (a) x := y - 2*x; y := x + y;
 (b) y := x + y; x := 2*x - y;
 (c) y := x + y; x := y - 2*x;


1.3
// x - y == A - B && x + y == A + B 
.....
// x + y == A + B 

 (a) x := y + 1; y := 1 - x;
 (b) x := x - 1; y := y + 1;
 (c) x := 1 - x; y := 1 - y;


1.4
.....
 y := y + x; x := x - y;
//x + y == A && y == B

 (a) // x == A && y == B - A
 (b) // 4*x == 2*B - A && y == (A + B)/2
 (c) // 2*x - 3*y == A && x - 2*y == B


1.5
// x == A, y == B 
z := x; y := x + y; x := x + y + z;
.....

 (a) // x == 2*A + B && y == A + B && z == A
 (b) // x == 3*A + B && y == B + A && z == A
 (c) // x == 2*A + B && y == A + B && z == B


1.6
// x == A + B && y == A - B 
z := x - y; x := x + y + z; y := z - y;
.....

 (a) // x == 2*A && y == 3*B - A
 (b) // x == 2*B && y == B - A
 (c) // x == 2*A + 2*B && y == 3*B - A